<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[java-01]]></title>
    <url>%2Fjava-01.html</url>
    <content type="text"><![CDATA[Pratice本篇文章主要编写的是关于java学习基础时的一些简单的练习： 乘法口诀123456789101112131415161718192021222324252627282930/ ** Author: Duncan function: 乘法口诀 */ import java.io.*; public class Demo1 &#123; public static void main(String args[])&#123; try &#123; InputStreamReader isr = new InputStreamReader(System.in); BufferedReader bufferReader = new BufferedReader(isr); System.out.println(&quot;Please input the second number:&quot;); String a1 = bufferReader.readLine(); int num1 = Integer.parseInt(a1); for (int i = 1;i &lt;= num1; ++i) &#123; for (int j = 1;j &lt;= i;++j) &#123; System.out.print(i + &quot;*&quot; + j + &quot;=&quot; + i*j); if ( i * j &lt; 10) &#123; System.out.print(&quot; &quot;); &#125; else &#123; System.out.print(&quot; &quot;); &#125; &#125; System.out.println(); &#125; &#125; catch(Exception e) &#123; System.out.print(&quot;error&quot;); &#125; &#125; &#125; 二维数组的转置 123456789101112131415161718192021222324252627282930313233343536373839 /** * * @author Duncan * @function 转置二维数组 */public class Array &#123; public static void main(String[] args) &#123; // TODO Auto-generated method stub int[][] arr = &#123;&#123;1,2,3&#125;,&#123;4,5,6&#125;,&#123;7,8,9&#125;&#125;; System.out.println(&quot;原来的三维矩阵:&quot;); for (int i = 0;i &lt; 3;++i) &#123; for (int j = 0; j &lt; 3; ++j) &#123; System.out.print(arr[i][j] + &quot; &quot;); &#125; System.out.println(); &#125; int temp; for (int i = 0;i &lt; 3; ++i) &#123; for (int j = 0;j &lt; 3; ++j) &#123; if (i &lt; j) &#123; temp = arr[i][j]; arr[i][j] = arr[j][i]; arr[j][i] = temp; &#125; &#125; &#125; System.out.println(&quot;转置后的三维矩阵:&quot;); for (int i = 0;i &lt; 3;++i) &#123; for (int j = 0; j &lt; 3; ++j) &#123; System.out.print(arr[i][j] + &quot; &quot;); &#125; System.out.println(); &#125; &#125;&#125; 打雪人的游戏 描述：有一群小孩在堆雪人，但是不时地有小孩加入，问总共有多少小孩。用面向对象的方法去思考。1234567891011121314151617181920public class children &#123; static int count = 0; public void joinGame() &#123; count++; &#125; public children() &#123; System.out.println(&quot;一个小孩子创建！！！&quot;); &#125; public static void main(String args[]) &#123; children ch1 = new children(); ch1.joinGame(); children ch2 = new children(); ch2.joinGame(); children ch3 = new children(); ch3.joinGame(); System.out.println(&quot;总共有&quot; + children.count + &quot;个孩子&quot;); &#125;&#125; 用面向对象的方法来创建一个电脑类 描述： 先设计类 然后根据类创建对象 设计计算机类，要求如下：属性：品牌，颜色，cpu型号，内存容量，硬盘大小，价格，工作状态方法：打开，关闭，休眠 创建一个计算机对象，调用打开，关闭方法 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263public class computer &#123; private String brand; public String getBrand() &#123; return brand; &#125; public void setBrand(String brand) &#123; this.brand = brand; &#125; public String getColor() &#123; return color; &#125; public void setColor(String color) &#123; this.color = color; &#125; public String getCpu() &#123; return cpu; &#125; public void setCpu(String cpu) &#123; this.cpu = cpu; &#125; public int getRam() &#123; return ram; &#125; public void setRam(int ram) &#123; this.ram = ram; &#125; public int getDom() &#123; return dom; &#125; public void setDom(int dom) &#123; this.dom = dom; &#125; public double getPrice() &#123; return price; &#125; public void setPrice(double price) &#123; this.price = price; &#125; public boolean isStatus() &#123; return status; &#125; public void setStatus(boolean status) &#123; this.status = status; &#125; private String color; private String cpu; private int ram; private int dom; private double price; private boolean status; public void open() &#123; System.out.println(&quot;计算机打开。。。。&quot;); &#125; public void close() &#123; System.out.println(&quot;计算机关闭。。。。&quot;); &#125; public void relax() &#123; System.out.println(&quot;计算机休眠。。。。&quot;); &#125;&#125; 简单的马里奥的问题 描述： 利用面向对象的设计超级马里奥游戏人物（打印出马里奥的位置）123456789101112131415161718192021222324252627282930313233343536373839404142434445464748public class maliao &#123; private int x;//横坐标 public int getX() &#123; return x; &#125; public void setX(int x) &#123; this.x = x; &#125; public int getY() &#123; return y; &#125; public void setY(int y) &#123; this.y = y; &#125; private int y;//纵坐标 //（x,y为马里奥的位置） private int total_x;//总共的范围x private int total_y;//总共的范围y public maliao(int total_x, int total_y) &#123; this.total_x = total_x; this.total_y = total_y; &#125; public void inputLocation(int x, int y) &#123; this.x = x; this.y = y; &#125; public void printMaLi() &#123; for (int i = 0; i &lt; total_x; ++i) &#123; for (int j = 0; j &lt; total_y; ++j) &#123; if (i == this.x-1 &amp;&amp; j == this.y-1) &#123; System.out.print(&quot;@&quot;); &#125; else &#123; System.out.print(&quot;*&quot;); &#125; &#125; System.out.println(); &#125; &#125; public static void main(String args[])&#123; maliao ma1 = new maliao(3,5); ma1.inputLocation(2, 3); ma1.inputLocation(1, 5); ma1.printMaLi(); &#125;&#125; 约瑟夫的问题（丢手帕的问题） josephu 问题为： 设编号为1，2，3,……n的n个人围坐一圈，约定编号为k（1&lt;=k&lt;=n）的人从1开始报数，数到m的那个人出列，它的下一位又从1开始报数，数到m的那个人又出列，依次类推，直到所有热出列为止，由此产生一个出对编号的序列。 提示：用一个不带头节点的循环链表来处理josephu问题：先构成一个有n个节点的单循环链表，然后由k结点起从1开始计数，计到m时，对应结点从链表中删除，然后再从被删除节点的下一个结点又从1开始计数，直到最后一个结点从链表中删除算法结束。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091public class Josophe &#123; public static void main(String[] args) &#123; // TODO Auto-generated method stub CycleList cyc = new CycleList(); cyc.setLength(5); cyc.createList(); cyc.setK(2); cyc.setM(2); cyc.show(); cyc.play(); &#125;&#125;//定义一个孩子节点class Child&#123; int no;//编号 Child nextChild; public Child(int i) &#123; no = i; &#125;&#125;//定义一个单循环链表class CycleList&#123; int length; Child first_child; int m;//读几下 int k; //从第几个开始读 public void setM(int m) &#123; this.m = m; &#125; public void setK(int k) &#123; this.k = k; &#125; public void setLength(int length) &#123; this.length = length; &#125; public void createList() &#123; first_child = new Child(1); //龙套角色 Child temp = first_child; for (int i = 0;i &lt; length - 1; ++i) &#123; Child ch = new Child(i + 2);//从2号开始 temp.nextChild = ch; temp = ch; &#125; temp.nextChild = first_child; &#125; public void play() &#123; //先找到第一个孩子 Child temp = first_child; Child temp2;//找出退出的孩子的上一个结点 while (this.length != 1) &#123; //找到第k个孩子，开始报数 for (int i = 1; i &lt; k; ++i) &#123; temp = temp.nextChild; &#125; //报到第m个孩子退出链表 for (int i = 1;i &lt; m; ++i) &#123; temp = temp.nextChild; &#125; temp2 = temp.nextChild; while (temp2.nextChild != temp) &#123; temp2 = temp2.nextChild; &#125; temp2.nextChild = temp.nextChild; temp = temp.nextChild; this.length--; &#125; System.out.println(&quot;最后一个出来的是：&quot; + temp.no); &#125; public void show() &#123; Child temp = first_child; for (int i = 0; i &lt; length; ++i) &#123; System.out.println(temp.no); temp = temp.nextChild; &#125; &#125;&#125;]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[认识你自己]]></title>
    <url>%2Fmood-in-love-02.html</url>
    <content type="text"><![CDATA[行为本片文章告诉你降低吸引的行为：（告诉你成功的秘诀，就是在你改变的时候，唯一要做的事就是低调）具备的条件: 开始对现状不满，这是原始动力。—找到并且正视自身的问题（可能是你自身的某些缺点）—找到办法改变它 接下来为13个常见的降低吸引的行为 坐立不安，烦躁紧张的小动作。 和女生讲话时，没事一会儿摸一下自己的鼻子，摸一下自己的脸，或者双手不知道往身体哪里放，一会儿放口袋，一会儿拿出来，或者去抓抓头，挠挠背等等一系列习惯性小毛病小动作全部去掉。因为这些动作很容易传递自己很紧张的讯导。和女生讲话为什么要放松，紧张为什么不好，不言而喻。 肩膀绷得太紧。缺乏笑容。和女生说话太过严肃，像是谈判一样或者假装“深沉”。 这是男人怕别人不把他当回事的时候的过头的反面表现。或者说是心虚的表现。几乎每个女生很容易察觉出男人各种心虚。 讲话太快(我仍然在犯) 讲话太快表明担心别人会打断你讲话，或者担心别人马上就会失去兴趣听你讲，但是你又要别人听你讲的话，想把一些有趣的东西讲出来，这样在他们失去兴趣之前，你就可以保住他们的兴趣，所以想最短时间内讲完。在女生眼里，这是非常不自信的表现。 习惯性口头语。类似，“对不对？”,“你知道吗？”等等。 我高中做演讲的时候有一次讲了30分钟，一共说了47次“对不对”，你猜猜，是谁第一个提醒我的？一个女生，没错，因为女孩会特别注意这种东西。这些口头语是在寻求别人的认可。 讲话太轻柔或者大嗓门 自己笑自己。 自己讲了一个笑话，然后自己就开始笑。或者自己讲话讲到一半就没事傻笑。或者别人问你话，你不知道怎么回答，只好傻笑等等。这个表明你无法承受社交压力，讲了笑话怕别人不笑，怕冷场，自己来填补。你可以试试看，没有任何表情非常自信的看着对方。 回答别人问题回答的过早或者太快。 表明你对这个谈话太看重，对这个说话的对象表现过早过多的兴趣。 太看重这次聊天的机会，其实就是在告诉她，我觉得我能和你聊天就是我上辈子修来的福，等于告诉她，我觉得自己配不上你。 第一时间回到之前在谈论但是后来被打断的话题。 这个行为表明很费劲想赢得别人的认可。当一个话题被打断，可能是对方接电话，突然问你一个问题，或者是突然遇到一个熟人等等。你抓住第一个可以插话的空间，开始继续你刚才要讲的话题，这样看上去你一直在等这个机会回到这个话题。为什么你这么急着要回到那个话题呢？因为要寻求他人的认可，你以为她如果听了你要讲的话会给你认可或者你认为你很棒。所以，不要急，等到她说“你刚才讲到那个……”的时候，在回到前面的那段话题。别人不提，表明她其实不感兴趣。讲了，反而透露出你寻求她认可，得不偿失。 急于表明自己的兴趣 比如在进入互相了解和熟悉之前，每次没听清楚她说什么，就急着问“你说什么”。同样道理，过早显示太多兴趣了。如果没有听清，就转换话题。切断她讲的话。甚至可以直接用男人底气十足地语气开玩笑地说：“你刚才说的我一个字都没听清楚（看着她沉默几秒钟）。。。但是，你刚才讲话的样子很可爱。整个过程看着她的眼睛，真诚，说话要稳。 回答过于完美完整，逻辑过于严密，感觉是你花了很多心思思考后得出的很好的答案。这个参考满足下限理论。 记住女人只会被比自己社交地位高的男人吸引 太啰嗦 废话太多。用太多的话去解释。 对以前她说的话记得太牢 这个意味着，她对你有太多、太多的社交价值，比如说你从来没有和这么迷人的女生约会过等等，或者你已经爱上她了。当然我不是说她的话无所谓。只是一开始她说的话如果你一字一句的记得太牢是不正常。一个简单的标准是，如果这句话是一个丑女或者一个其他什么刚认识的男人说的，你会不会记得这么牢？如果不会，对她也不要。不过，你和她已经在一个深度亲密的谈话中，两人已经建立很好的信任关系和非常熟悉对方。那么，这就不是问题。 过早谈论自己或者倾诉自己心理. 这个等于，太着急要别人来喜欢你。你生怕别人不喜欢你。还是心虚的表现。每个人都有这个趋向，都是要有意识的控制住。显摆，想要表现自己是一个吸引女生最大拦路虎。你要先主动了解她，这才是男生主动的表现，而不是主动去搭讪，吹牛，即使你真的很厉害（一般大佬很低调）。 自我剖析接下来属于我对自己事情的反省，故事就不讲了，纯属释放自己情绪，才在博客上写，如果你觉得好，有机会可以当面聊聊。我对追的女孩子的一次次尝试（主动聊天，赞美，主动帮忙等）在她眼里到底是什么？ 为什么当初一次小小的争吵就断送了你和她的未来？难道就是那次争吵导致她忘记了你所有的好，留下的只是那些无法磨灭的坏印象吗？这些问题经常在我的脑中盘旋，它们就像一个无底洞，一个个深渊，每次总是把我带进这种无止境的思考中去。但是总是找不到答案。我憎恨这种感觉，憎恨这种节奏（这也许就是不认同自己，女生不喜欢你的真正的原因）。&ensp; 每次我经历这些痛苦的事情后，我就开始问自己：女生她们到底要什么？她们到底在想些什么？到底什么样的男人才能够吸引她们？到底我该做些什么才能让她们有那种被我吸引的感觉，然后深深爱上我再也不愿意离开我？大家都听说过鲁豫的故事，最终在分开多年后又重新走到了一起，为什么呢？因为男方变得更加成熟、更加自信、更加幽默、也更加懂得女生了。那他到底改变了什么呢？ 人不知道自己要改变什么，是因为他从没有真正的看到自己的问题，如果每个人都可以很清楚的看到自己的问题，如果每个人都可以很清楚的看到自己的问题，那么每个人都知道自己需要改变成什么使自己变得更好。首先我认为男人应该永不放弃，我们不会因为眼前的挫败，困难，任何东西而放弃我们真正想要的，同样也包括你喜欢的女生。但这种坚持并不是所谓的当你碰到女生离开你，拒绝你，对你冷淡，然后开始坚持发短消息给她，坚持电话她，坚持向她示好，告诉她自己是多么爱她，坚持。。。。。我都做过，估计你也不例外，但现在想来，这样坚持到底是会让女生重新被你吸引回到你身边，还是会让她觉得被你逼的喘不过气，然后躲得你越来越远？对于我喜欢的女孩我一直的做法： 我一直在试图的挽回她 当你发现快要失去她的时候，你变的更加的殷勤，变得不像你自己了。我不知道到底是什么东西让男人觉得要通过挽回来重新得到女生，但是我们都这样做过，而且一次次的明知故犯。那挽回是什么？我觉得就是“说服”女孩重新喜欢自己，而不是让女生重新感觉她还是喜欢你的！ 我不懂女生的心理 我一直都没有意识到所有她回绝你的理由都是骗你的。什么“性格不合”，“父母不同意”，“我现在只想学习”……这些都是女生来忽悠男生，或者拜托那些经常缠着她的男人们的官方的说辞。其实她真正想告诉你的是：“哥们，你这套东西没办法吸引到我。”说实话，如果她真的被你吸引，或者说对你要有吸引的话，那么她不会在乎你的长相、身高、性格。如果她父母不同意的话，她会选择你，而不是她的父母，她会选择和你私奔。 我在任她摆布 是否她一个电话你就可以从外地直接赶到她的身边，她说不想让你碰她，你就乖乖在她的身边，安分守己。这不就是她身边可爱的宠物小狗了。当她无聊的时候，她就会过来摸摸你的小脑袋，然后让你摆个pose。当她不高兴搭理你的时候，无论你怎么做，她只会以一张臭脸相对。很多男人常有一个错误的认为，认为女生和他们在一起了，他们就能释放出原来的自己，告诉自己的一切，甚至自己银行卡密码。他们没有意识到：吸引是流动的。她今天可能表现的很爱你，但是明天你的表现不能吸引她，那么昨天的吸引她就再也记不起来了。同样，她今天拒绝你，坚决的拒绝你，只能证明你今天做的很糟糕，你今天做的事情没能激起她的“吸引”情绪。但这并不代表明天依然如此，只要你明天学会了真正可以吸引女生的方法，那么明天，她就可能依偎在你的怀里。关键是你知道怎么做是有吸引力的，怎么做是没有魅力的表现。当你完全被她掌握后，她知道只要她一个电话你就会出现在她的面前，她知道她说什么你就会高兴，她做什么你就能难过上一个晚上的时候，那么你这个男人对她而言就再也没有神秘感，再也没有挑战，在她眼里你开始变得无趣，她会觉得和你在一起就会很无聊。如果她这样觉得，那我想不出她为什么还要选择和你在一起。 她是我生活的全部，而我只是她生活中的一部分，甚至很小的一部分 要帮女生带入你的生活，你要让她意识到她是你生活的一部分，可以是比较重要的一部分，但不是全部。因为对于她来说，那样的话就会和你一起没有太大的压力。同时你知道你自己还要写什么，你有你的爱好，兴趣和其他的一些追求。这样女生就会不断开始注意你的细节，她会试图讨好你，她会做很多事情让你更关注她，让你更喜欢她，她根本没有时间去想是不是要离开你，她就是不会这么想。并且更重要的是，女生喜欢这种感觉，女生也喜欢那些可以带给我她这种感觉的男人。而如果反过来，她说你是木头，而她却又她的圈子，她经常出去玩，有很多男人追求她，她又很多选择，你只是她生活中的很小一部分。你开始注意她的种种细节，你观察她的中指上带了戒指，你在做很多事情讨好她，试图让她对你有更多的关注，更多的喜欢，你觉得你和她在一起的几率，主动权在谁的手上？ 怎么做 意识到自己的问题，去找到自己身上那些真正导致你无法吸引到她的问题。 改变形象。这是最快，最有效的改变自己的方法，不过费钱。 了解女生，不要以一定的目的去交友，倾听他们，找到真正聊天的感觉。 当女孩不回你的消息时 我想大多数人和我一样一定遇到过这个场景，女孩本来和你聊的很开心，突然就不回你的消息了。然后你就会有一句没一句的想要她回你的话，例如在？你在干什么呢？等等。当女生不回我们自己信息的时候，我们男人总是本能地去追问女生为什么不回自己的信息，本能的需要女生给自己一个不回信息的解释。但是你会发现，当你越是这样做，你越是发觉女生回信息越来越慢，有的时候甚至连着几天不回你信息，即使打电话过去也非常的冷淡，甚至不理你。如果你想得到这个结果，你可以试试。为什么会这样？当女生不回你信息，你去有意追问的时候女生会怎么看待你？女生会这样看： 你不够自信。一旦女生不回你的信息，你就会心里没底。你会觉得，是不是自己说的话没有意思，不能吸引女生，你会 担心女生是不是对你没有那个意思，她会不会不喜欢你，你会不会从此失去她。 你不够有魅力。有魅力的男人，不在乎女生回不回自己的信息，是否足够关注自己。他们想的是完全另一套东西，他们想的是，我是不是该关注这个女生，至于她回不回信息，无所谓，更不可能一条条的追问她为什么不回信息。 你还不够成熟。你期待对方回你信息，就是期待对方给你更多的关注，尤其是在那你做出某种努力后（讨好她，发关心她的信息，表白……），你就越期待得到关注。这让女生想起什么？没错，她的小外甥，或者小侄子，或者隔壁邻居家的小弟弟，当她陪着他们玩的时候，他们就兴高采烈，当她不陪他们，不给他们关注的时候，他们就哭着闹着盯着她。 她已经搞定你了，你对她而言再也没有任何挑战。这也就意味着，她可以对你做任何事情，不回你信息，不接你电话……对你忽冷忽热，你依然会跟在她的屁股后面期待她的信息。 你完全不能够吸引她。你完全不知道什么才能吸引女生。你完全没能给她那种被称作“吸引情绪”的东西。更糟糕的是，女生选择和某个男人在一起，最最看重的就是感觉，就是这种被称作为“吸引情绪”的东西，如果你给不了，女生不会和你在一起。所以，你必须要先了解吸引是什么玩意儿，具体做什么才能吸引女生，才是女生所期待的，那么最好的办法，无非就是直接让女生来告诉你她们到底怎么想的，她们希望你怎么去做，但是这个很难在口头上直接告诉你这些。 其实，要意识到这个错误很容易，但是真的要做到，会很难。 我完全可以体会这种感觉，我自己曾经无数次经历过这样的事。每次发完信息，总期待她能立刻给自己反应，立刻回复。总是会时不时的看着手机，看她回复没有，似乎总有那么一个点，会忍不住再去追发一条信息……究其根本原因，你发信息的目的是什么？你信息和她聊天，电话和她聊天背后的真正目的是什么？不会仅仅是为了她回复你吧？其实无论你做什么，你真正的目的很明确，你要她喜欢你!而不是要她不喜欢你，要她离开你。当然，如果你要她离开你，你就可以质问她为什么不回信息。但如果你的目的是要她喜欢你，那么她回不回信息的事你是千万不能当一回事来在乎的，你无论发什么话，只要是关于她不回你信息的，这个潜沟通出去的就是低价值的信息。所以不能再做了。道理其实很简单，如果你发消息她没有回，只有两种情况：&gt; 她没看到。 她看到了但是不想回。 如果是第一种情况，那么如果你足够吸引到她，她看到以后自然会马上回你，你催她反而破坏了吸引，本来她在乎你怎么看她，但是却因为有事没有及时回你的信息，她一定会愧疚，因此会更加讨好你，期望你原谅，希望你可以继续关注她。 但是，一旦你发信息追问，她的所有的这种愧疚就立刻消失，她会觉得无论她回不回你都会盯着她的，无论她对你好不好，你还是会一样的关注她。 如果是第二种情况，她看到了但是不想回，那如果你再去追问，她就会觉得你很烦，从而对你更加冷淡。这让我想其一件事情，最近不知道怎么回事，一直有销售打电话给我，我第一次会好声好气和她说我不需要这个产品，但是后来接二连三她还是电话我，于是我只能为把这个号码拉入黑名单。如果你这么做，女生也会觉得这是一种骚扰，也会拉黑你。 如果碰到第二种情况，你该意识到，你的吸引出现了问题，你根本就没有激起她吸引的情绪。]]></content>
      <tags>
        <tag>love</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[count]]></title>
    <url>%2Fcount.html</url>
    <content type="text"><![CDATA[AV.initialize("r2KGlMSCJXuT8DxCNg5Nvzp7-gzGzoHsz", "GUBWHgKVJHhD5faoD71ezoDL"); var time=0 var title="" var url="" var query = new AV.Query('Counter');//表名 query.notEqualTo('id',0); //id不为0的结果 query.descending('time'); //结果按阅读次数降序排序 query.limit(20); //最终只返回10条结果 query.find().then(function (todo) { for (var i=0;i]]></content>
      <tags>
        <tag>count</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[做真正的自己]]></title>
    <url>%2Fmood-in-love-01.html</url>
    <content type="text"><![CDATA[找回真正的自己 满足她下限 &ensp;女生说：给我50块，才和你聊。你愿意吗？ 。。。。我5毛都不给&ensp;你有遇到过，女生对你说一句话，你不知道怎么回应，不知道怎么做。别人对你提一个要求，你不知道该怎么应对?包括女生对你说的话，很多哥们不知道怎么回复。怕说错话，做错事。&ensp;原因是什么？是因为你还不明白一个道理： 在社交里，包括两性关系的交往，60分就是100分，“及格”就是“满分”&ensp;你潜意识里默认60分几个是不够的，一定要100分才好。你觉得这么回答，才80分，不行；那个做法才90分，也不行。你不知道你在追求的是满足对方的上限，你在追求100分。社交的回怎么回应对方，是因为你想的是：我怎么回答，你才会满意。也就是，应有上限思维和下限思维： 上限思维怎么回，怎么做，可以满足你？ 下限思维只要不侵犯你，怎么会，怎么做都行。你会发现，当你用上限思维去想怎么回应对方的时候，你就是没法知道该怎么回应才好。你不知道说什么，做什么，是再也正常不过的事。因为你不是对方肚子里的蛔虫，你是很难知道到底怎么回应才能满足他/她。但很多哥们，把这个当作自己的一个缺点，认为是自己不会社交，不懂女人，或者能力不够，或者什么恋爱学还没学好。&ensp;全是狗屁。这种自责只会让你更加自卑，反而在社交和恋爱里碰壁。他们不知道的是：&ensp;&ensp;在社交里，包括恋爱交往，你只需满足下限就行。就是你只要确保你的回应，无论是说的，还是做的，是不侵犯地方的，不是无礼的。你自己想怎么回应，就怎么回应，都是对的，都是正确的，都是100分。即所谓，在社交中，60分就是100分。**即“及格”就是“满分”**。当你用下限思维去想怎么回应对方的时候，你是不会碰到不知道说什么，不知道做什么的问题的。因为就你想怎么说，怎么做都可以，只要不侵犯对方。这样，你就能很自由地表达出自己的意愿和意思。绝大部分人本能地知道什么叫侵犯对方，什么叫无礼，都有这个基本的分辨能力。你只要守住这个下限就行。而按照上限思维，要想怎么回答才能满足对方的话，你就失去了自由，你就要压抑自己的想法和感受。你就要不尊重自己的意愿，也就是不尊重自己。我发现，很多哥们会默认用上限思维，去满足别人，原因很多事因为小时候有一个让你摸不透情绪的父母。你不知道说了什么，做了什么，她就不开心了。她一不开心，孩子你就遭殃。养成习惯了，一定要让对方开心满意，你才觉得自己是安全的。]]></content>
      <categories>
        <category>love</category>
      </categories>
      <tags>
        <tag>love</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[学习hexo的布局]]></title>
    <url>%2Flearn-layout-hexo.html</url>
    <content type="text"><![CDATA[本片文章主要来描述关于hexo中的页面布局的知识 首页布局主题美化文章中添加居中模块 优秀的人，不是不合群，而是他们合群的人里面没有你 自定义hexo new生成md文件的选项在/scaffolds/post.md文件中添加：12345678910---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags:categories: copyright: truepermalink: 01top: 0password:--- 隐藏网页底部powered By Hexo/强力驱动 打开themes/next/layout/_partials/footer.swig,使用””隐藏之间的代码即可，或者直接删除12345678910111213141516&lt;!--&#123;% if theme.footer.powered %&#125; &lt;div class=&quot;powered-by&quot;&gt;&#123;# #&#125;&#123;&#123; __(&apos;footer.powered&apos;, &apos;&lt;a class=&quot;theme-link&quot; target=&quot;_blank&quot; href=&quot;https://hexo.io&quot;&gt;Hexo&lt;/a&gt;&apos;) &#125;&#125;&#123;##&#125;&lt;/div&gt;&#123;% endif %&#125;--&gt;&#123;% if theme.footer.theme.enable %&#125; &lt;!--&lt;div class=&quot;theme-info&quot;&gt;&#123;# #&#125;&#123;&#123; __(&apos;footer.theme&apos;) &#125;&#125; &amp;mdash; &#123;# #&#125;&lt;a class=&quot;theme-link&quot; target=&quot;_blank&quot; href=&quot;https://github.com/iissnan/hexo-theme-next&quot;&gt;&#123;# #&#125;NexT.&#123;&#123; theme.scheme &#125;&#125;&#123;# #&#125;&lt;/a&gt;&#123;% if theme.footer.theme.version %&#125; v&#123;&#123; theme.version &#125;&#125;&#123;% endif %&#125;&#123;##&#125;&lt;/div&gt;--&gt;&#123;% endif %&#125; 文章加密访问 打开themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig文件，在meta标签后面插入这样一段代码：12345678910&lt;script&gt; (function()&#123; if(&apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123; if (prompt(&apos;请输入文章密码&apos;) !== &apos;&#123;&#123; page.password &#125;&#125;&apos;)&#123; alert(&apos;密码错误！&apos;); history.back(); &#125; &#125; &#125;)();&lt;/script&gt; 然后在文章中添加：1password: nmask 如果passwork为空，则表示不用密码。 博文置顶修改hero-generator-index插件，把文件：node_modules/hexo-generator-index/lib/generator.js内的代码替换为：12345678910111213141516171819202122232425262728&apos;use strict&apos;;var pagination = require(&apos;hexo-pagination&apos;);module.exports = function(locals)&#123; var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 &#125; else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排 &#125;); var paginationDir = config.pagination_dir || &apos;page&apos;; return pagination(&apos;&apos;, posts, &#123; perPage: config.index_generator.per_page, layout: [&apos;index&apos;, &apos;archive&apos;], format: paginationDir + &apos;/%d/&apos;, data: &#123; __index: true &#125; &#125;);&#125;; 在文章中添加top值，数值越大文章越靠前12345---......copyright: truetop: 100--- 默认不设置则为0，数值相同时按时间排序 添加顶部加载条 打开/themes/next/layout/_partials/head.swig文件，在maximum-scale=1”/&gt;后添加如下代码:12&lt;script src=&quot;//cdn.bootcss.com/pace/1.0.2/pace.min.js&quot;&gt;&lt;/script&gt;&lt;link href=&quot;//cdn.bootcss.com/pace/1.0.2/themes/pink/pace-theme-flash.css&quot; rel=&quot;stylesheet&quot;&gt; 但是，默认的是粉色的，要改变颜色可以在/themes/next/layout/_partials/head.swig文件中添加如下代码（接在刚才link的后面）12345678910111213&lt;style&gt; .pace .pace-progress &#123; background: #1E92FB; /*进度条颜色*/ height: 3px; &#125; .pace .pace-progress-inner &#123; box-shadow: 0 0 10px #1E92FB, 0 0 5px #1E92FB; /*阴影颜色*/ &#125; .pace .pace-activity &#123; border-top-color: #1E92FB; /*上边框颜色*/ border-left-color: #1E92FB; /*左边框颜色*/ &#125;&lt;/style&gt; 添加热度next主题集成leanCloud,打开/themes/next/layout/_macro/post.swig在“leancloud-visitors-count”&gt;标签后面添加℃。然后打开，/themes/next/languages/zh-Hans.yml,将visitors内容改为热度即可。 主页文章添加阴影效果 打开\themes\next\source\css_custom\custom.styl,向里面加入:12345678// 主页文章添加阴影效果 .post &#123; margin-top: 60px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125; 修改底部的那个带#号的标签 修改模板/themes/next/layout/_macro/post.swig ，搜索rel=”tag”&gt; #, 换成 鼠标点击小红心的设置 将love.js文件添加到 \themes\next\source\js\src 文件目录下。找到 \themes\next\layout_layout.swing 文件， 在文件的后面， 标签之前 添加以下代码：12&lt;!-- 页面点击小红心 --&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt; 背景设置 将 particle.js 文件添加到 \themes\next\source\js\src 文件目录下。找到 \themes\next\layout_layout.swing 文件， 在文件的后面，标签之前 添加以下代码：12&lt;!-- 背景动画 --&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/particle.js&quot;&gt;&lt;/script&gt; 修改文章内链接文本样式 将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。找到文件themes\next\source\css_custom\custom.styl,添加如下css样式：12345678.post-body p a &#123; color: #0593d3; border-bottom: none; &amp;:hover &#123; color: #0477ab; text-decoration: underline; &#125;&#125; 博文压缩 在站点的根目录下执行以下命令：12$ npm install gulp -g$ npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save 在博客根目录下新建gulpfile.js,并填入以下内容：123456789101112131415161718192021222324252627282930313233var gulp = require(&apos;gulp&apos;);var minifycss = require(&apos;gulp-minify-css&apos;);var uglify = require(&apos;gulp-uglify&apos;);var htmlmin = require(&apos;gulp-htmlmin&apos;);var htmlclean = require(&apos;gulp-htmlclean&apos;);// 压缩 public 目录 cssgulp.task(&apos;minify-css&apos;, function() &#123; return gulp.src(&apos;./public/**/*.css&apos;) .pipe(minifycss()) .pipe(gulp.dest(&apos;./public&apos;));&#125;);// 压缩 public 目录 htmlgulp.task(&apos;minify-html&apos;, function() &#123; return gulp.src(&apos;./public/**/*.html&apos;) .pipe(htmlclean()) .pipe(htmlmin(&#123; removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, &#125;)) .pipe(gulp.dest(&apos;./public&apos;))&#125;);// 压缩 public/js 目录 jsgulp.task(&apos;minify-js&apos;, function() &#123; return gulp.src(&apos;./public/**/*.js&apos;) .pipe(uglify()) .pipe(gulp.dest(&apos;./public&apos;));&#125;);// 执行 gulp 命令时执行的任务gulp.task(&apos;default&apos;, [ &apos;minify-html&apos;,&apos;minify-css&apos;,&apos;minify-js&apos;]); 生成博文是执行 hexo g &amp;&amp; gulp 就会根据 gulpfile.js 中的配置，对 public 目录中的静态资源文件进行压缩。 搜索功能 安装hexo-generator-searchdb,在站点的根目录下执行以下命令：1npm install hexo-generator-searchdb --save 编辑站点配置文件，新增以下内容到任意位置：12345search: path: search.xml field: post format: html limit: 10000 编辑主题配置文件，启用本地搜索功能123# Local searchlocal_search: enable: true 增加阅读排行统计 首先我们可以使用leancloud来统计页面阅读数量，以及存储这些信息，然后通过leancloud提供的api编写js脚本来获取阅读数量信息，并展示在页面上。首先新建一个page页面，hexo new page “”，然后编辑此.md文件，写下：123456789101112131415161718192021222324&lt;script src=&quot;https://cdn1.lncld.net/static/js/av-core-mini-0.6.1.js&quot;&gt;&lt;/script&gt;&lt;script&gt;AV.initialize(&quot;&quot;, &quot;&quot;);&lt;/script&gt; //需要写上leancloud的key&lt;script type=&quot;text/javascript&quot;&gt; var time=0 var title=&quot;&quot; var url=&quot;&quot; var query = new AV.Query(&apos;Counter&apos;);//表名 query.notEqualTo(&apos;id&apos;,0); //id不为0的结果 query.descending(&apos;time&apos;); //结果按阅读次数降序排序 query.limit(20); //最终只返回10条结果 query.find().then(function (todo) &#123; for (var i=0;i&lt;10;i++)&#123; var result=todo[i].attributes; time=result.time; //阅读次数 title=result.title; //文章标题 url=result.url; //文章url var content=&quot;&lt;p&gt;&quot;+&quot;&lt;font color=&apos;#0477ab&apos;&gt;&quot;+&quot;【阅读次数:&quot;+time+&quot;】&quot;+&quot;&lt;a href=&apos;&quot;+&quot;http://thief.one&quot;+url+&quot;&apos;&gt;&quot;+title+&quot;&lt;/font&gt;&quot;+&quot;&lt;/a&gt;&quot;+&quot;&lt;/p&gt;&quot;; // document.write(&quot;&lt;a href=&apos;&quot;+&quot;http://thief.one/&quot;+url+&quot;&apos;&gt;&quot;+title+&quot;&lt;/a&gt;&quot;+&quot; Readtimes:&quot;+time+&quot;&lt;br&gt;&quot;); document.getElementById(&quot;heheda&quot;).innerHTML+=content &#125; &#125;, function (error) &#123; console.log(&quot;error&quot;); &#125;);&lt;/script&gt; Markdown的语法123456789101112131415161718[hexo](http://www.baidu.com) 表示超链接##大标题###小标题&lt;!-- more --&gt;&lt;!-- 标签别名 --&gt;&#123;% cq %&#125;blah blah blah&#123;% endcq %&#125;空格 中文全角空格表示---文章标题---&gt;内容 区块引用*1*2*3列表*内容* 表示强调内容![Alt text](/path/to/img.jpg) 图片![](/upload_image/20161012/1.png) 详细的Markdown语法请参考：MarkDown语法]]></content>
      <categories>
        <category>Learn</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo-NexT搭建个人博客（一）]]></title>
    <url>%2Fhexo-next-one.html</url>
    <content type="text"><![CDATA[简介Hexo 是一个快速、简洁且高效的静态站点生成框架，它基于 Node.js 。 它有以下特点： 超快速度Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。 支持MarkdownHexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。 一键部署只需一条指令即可部署到Github Pages，或其他网站 丰富的插件Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。 通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 标签插件 来快速的插入特定形式的内容。 基于 Hexo 这个优秀的博客框架，很多优秀的开发者奉献出了它们基于 Hexo 开发的主题。NexT 因其 精于心，简于形 的风格，一直被广大用户所喜爱。 安装安装 Hexo 只需几分钟时间，若你在安装过程中遇到问题或无法找到解决方式，请提交问题，我会尽力解决你的问题。 安装前提安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序: Node.jsGit 如果您的电脑中已经安装上述必备程序，那么恭喜你！接下来只需要使用 npm 即可完成 Hexo 的安装。1$ npm install -g hexo-cli 如果你的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。 安装 Git Windows：下载安装 git 。 Download Now Mac：使用 Homebrew，MacPorts 或下载 安装程序 安装 Linux（Ubuntu，Debian）：sudo apt-get install git-core Linux（Fedora，Red Hat，CentOS）：sudo yum install git-core 安装 Node.js安装 Node.js 的最佳方式是使用 nvm。（nvm：Node Version Manager）windows 下使用 nvm 请看这里： nvm-windows ，首先需要下载安装 nvm 。 Download Nowwindows下安装完nvm以后，我们可以打开命令行中执行命令12$ nvm$ nvm install latest 执行完以后，重启命令行，执行命令 node -v ，如果出现版本号，那么 Node.js 就安装成功了。 如果没有安装成功，那可能就是墙的原因。建议下载 Node.js 直接安装。 Download Now 安装 Hexo有了 Node.js ，我们可以使用 npm 安装 Hexo。1$ npm install -g hexo-cli 安装 Hexo 完成后，我们首先需要为我们的项目创建一个指定文件夹（例如我在 D 盘目录下创建了一个文件夹 blog 。D:\blog ），在指定文件夹中执行下列命令， Hexo 将会在指定文件夹中新建所需要的文件。1$ hexo init 等待安装，安装完成后，指定文件夹 的目录如下：12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── 我们继续执行命令12$ hexo g$ hexo s --debug Hexo 将 source 文件夹中除 posts 文件夹之外，开头命名为 (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件夹会被拷贝过去。这个时候，我们在浏览器中访问 http://localhost:4000/ ，就可以看到基于 Hexo 的默认主题的原型： 安装 NexT 主题下载 NexT 主题依旧是在当前目录下，使用 Git checkout 代码：1$ git clone https://github.com/iissnan/hexo-theme-next themes/next 等待下载完成。 在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml 。其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。 我们约定，将前者称为 站点配置文件，后者称为 主题配置文件 启用 NexT 主题打开 站点配置文件 ，找到 theme 字段，并将其值更改为 next 。到此， NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前，我们最好使用 hexo clean 来清除 Hexo 的缓存。 验证主题首先启动 Hexo 本地站点，并开启调试模式（即加上 --debug），整个命令是 hexo s --debug。在服务启动的过程，注意观察命令行输出是否有任何异常信息。当命令行输出中提示： 1INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop. 此时即可使用浏览器访问 http://localhost:4000/ ，检查站点是否正确运行。 当你看到站点的外观与下图所示类似时即说明你已成功安装 NexT 主题。这是 NexT 默认的 Scheme —— Muse现在，我们已经成功安装并启用了 NexT 主题。关于更多基本操作和基础知识，请查阅 Hexo 与 NexT 官方文档. 总结本地调试步骤三部曲：123$ hexo clean$ hexo g$ hexo s --debug 这种带 debug 的运行，如果出现错误，可以在命令行中看到错误提示信息。 部署步骤三部曲：123$ hexo clean$ hexo g$ hexo d 当然在部署之前，需要先配置好配置文件中的 deploy。 常用命令1234567$ hexo new "postName" #新建文章$ hexo new page "pageName" # 新建页面$ hexo generate # 生成静态页面至public目录$ hexo server # 开启预览访问端口(默认端口4000，'ctrl+c'关闭server)$ hexo deploy # 项目部署$ hexo help # 查看帮助$ hexo version # 查看Hexo的版本 简写命令1234$ hexo new == hexo n$ hexo generate == hexo g$ hexo server == hexo s$ hexo deploy == hexo d 常见问题1在 hexo 的配置和设置文件中，在冒号后面没留空格会导致出问题：错误的设置：123author:SunDuncanemail:sunmaoyunduncan@gmail.comlanguage:zh-CN 正确的设置：123author: SunDuncanemail: sunmaoyunduncan@gmail.comlanguage: zh-CN 常见问题2关于 Git 提交中用户名和 Email 的设置12git config --global user.name &quot;Your name&quot;git config --global user.email &quot;Your email&quot; 常见问题3Hexo 中的图标使用的是 Font Awesome ，所以，我们的博客已经自带了 Font Awesome 中的所有图标，基本可以满足我们的所有需求，我们可以去 Font Awesome 中查找我们想要使用的图标。 &lt;i class=&quot;fa fa-github&quot;&gt;&lt;/i&gt; &lt;i class=&quot;fa fa-github fa-lg&quot;&gt;&lt;/i&gt; &lt;i class=&quot;fa fa-github fa-2x&quot;&gt;&lt;/i&gt; 最后要说的是： 博客源码 ， 欢迎 star]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fhello-world.html</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hexo-NexT搭建个人博客（三）]]></title>
    <url>%2Fhexo-next-three.html</url>
    <content type="text"><![CDATA[本篇文章将介绍基于NexT主题下的一些扩展功能的实现。首先，我们需要明白： 在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml 。其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。 我们约定，将前者称为 站点配置文件，后者称为 主题配置文件 1.设置侧栏的位置修改 主题配置文件 中 sidebar.position 的值，支持的选项有：left right目前仅 Pisces Scheme 支持 position 配置，也就是说NexT主题的侧栏位置是不能设置的，设置了也没用，反正都在右边。 2. 关于添加居中模块]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo-NexT搭建个人博客（二）]]></title>
    <url>%2Fhexo-next-two.html</url>
    <content type="text"><![CDATA[本篇文章将介绍基于NexT主题下的一些扩展功能的实现。首先，我们需要明白： 在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml 。其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。 我们约定，将前者称为 站点配置文件，后者称为 主题配置文件 1.设置侧栏的位置修改 主题配置文件 中 sidebar.position 的值，支持的选项有：left right目前仅 Pisces Scheme 支持 position 配置，也就是说NexT主题的侧栏位置是不能设置的，设置了也没用，反正都在右边。 2. 关于添加居中模块优秀的人，不是不合群，而是他们合群的人里面没有你代码如下：1&lt;blockquote class="blockquote-center"&gt;优秀的人，不是不合群，而是他们合群的人里面没有你&lt;/blockquote&gt; 3. 添加High一下打开博客根目录 \themes\next\layout\_partials\header.swig ，在&lt;ul&gt; ... /ul&gt; 标签之间加入以下代码：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150&lt;li&gt; &lt;a title="把这个链接拖到你的Chrome收藏夹工具栏中" href='javascript:(function() &#123; function c() &#123; var e = document.createElement("link"); e.setAttribute("type", "text/css"); e.setAttribute("rel", "stylesheet"); e.setAttribute("href", f); e.setAttribute("class", l); document.body.appendChild(e) &#125; function h() &#123; var e = document.getElementsByClassName(l); for (var t = 0; t &lt; e.length; t++) &#123; document.body.removeChild(e[t]) &#125; &#125; function p() &#123; var e = document.createElement("div"); e.setAttribute("class", a); document.body.appendChild(e); setTimeout(function() &#123; document.body.removeChild(e) &#125;, 100) &#125; function d(e) &#123; return &#123; height : e.offsetHeight, width : e.offsetWidth &#125; &#125; function v(i) &#123; var s = d(i); return s.height &gt; e &amp;&amp; s.height &lt; n &amp;&amp; s.width &gt; t &amp;&amp; s.width &lt; r &#125; function m(e) &#123; var t = e; var n = 0; while (!!t) &#123; n += t.offsetTop; t = t.offsetParent &#125; return n &#125; function g() &#123; var e = document.documentElement; if (!!window.innerWidth) &#123; return window.innerHeight &#125; else if (e &amp;&amp; !isNaN(e.clientHeight)) &#123; return e.clientHeight &#125; return 0 &#125; function y() &#123; if (window.pageYOffset) &#123; return window.pageYOffset &#125; return Math.max(document.documentElement.scrollTop, document.body.scrollTop) &#125; function E(e) &#123; var t = m(e); return t &gt;= w &amp;&amp; t &lt;= b + w &#125; function S() &#123; var e = document.createElement("audio"); e.setAttribute("class", l); e.src = i; e.loop = false; e.addEventListener("canplay", function() &#123; setTimeout(function() &#123; x(k) &#125;, 500); setTimeout(function() &#123; N(); p(); for (var e = 0; e &lt; O.length; e++) &#123; T(O[e]) &#125; &#125;, 15500) &#125;, true); e.addEventListener("ended", function() &#123; N(); h() &#125;, true); e.innerHTML = " &lt;p&gt;If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.&lt;/p&gt; &lt;p&gt;"; document.body.appendChild(e); e.play() &#125; function x(e) &#123; e.className += " " + s + " " + o &#125; function T(e) &#123; e.className += " " + s + " " + u[Math.floor(Math.random() * u.length)] &#125; function N() &#123; var e = document.getElementsByClassName(s); var t = new RegExp("\\b" + s + "\\b"); for (var n = 0; n &lt; e.length; ) &#123; e[n].className = e[n].className.replace(t, "") &#125; &#125; var e = 30; var t = 30; var n = 350; var r = 350; var i = "//7xuupy.com1.z0.glb.clouddn.com/tongxingSibel%20-%20Im%20Sorry.mp3"; var s = "mw-harlem_shake_me"; var o = "im_first"; var u = ["im_drunk", "im_baked", "im_trippin", "im_blown"]; var a = "mw-strobe_light"; var f = "//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake-style.css"; var l = "mw_added_css"; var b = g(); var w = y(); var C = document.getElementsByTagName("*"); var k = null; for (var L = 0; L &lt; C.length; L++) &#123; var A = C[L]; if (v(A)) &#123; if (E(A)) &#123; k = A; break &#125; &#125; &#125; if (A === null) &#123; console.warn("Could not find a node of the right size. Please try a different page."); return &#125; c(); S(); var O = []; for (var L = 0; L &lt; C.length; L++) &#123; var A = C[L]; if (v(A)) &#123; O.push(A) &#125; &#125; &#125;)() '&gt;High一下&lt;/a&gt; &lt;/li&gt; 4. 添加最近访客在需要添加最近访客的网页对应的 markdown 文件中添加如下代码：12最近访客&lt;div class=&quot;ds-recent-visitors&quot; data-num-items=&quot;39&quot; data-avatar-size=&quot;40&quot; id=&quot;ds-recent-visitors&quot;&gt;&lt;/div&gt; 5. 鼠标点击小红心的设置 将 love.js 文件添加到 \themes\next\source\js\src 文件目录下。 找到 \themes\next\layout\_layout.swing 文件， 在文件的后面，&lt;/body&gt; 标签之前 添加以下代码：12&lt;!-- 页面点击小红心 --&gt;&lt;script type="text/javascript" src="/js/src/love.js"&gt;&lt;/script&gt; 6. 背景的设置 将 particle.js 文件添加到 \themes\next\source\js\src 文件目录下。 找到 \themes\next\layout\_layout.swing 文件， 在文件的后面，&lt;/body&gt;标签之前 添加以下代码：12&lt;!-- 背景动画 --&gt;&lt;script type="text/javascript" src="/js/src/particle.js"&gt;&lt;/script&gt; 7.修改文章内链接文本样式将链接文本设置为蓝色，鼠标划过时文字颜色加深，并显示下划线。找到文件 themes\next\source\css\_custom\custom.styl ，添加如下 css 样式：12345678.post-body p a &#123; color: #0593d3; border-bottom: none; &amp;:hover &#123; color: #0477ab; text-decoration: underline; &#125;&#125; 8. 多说评论不稳定，加载速度慢怎么办？把多说评论依赖的 embed.js 放置底部，这里需要修改的文件是 duoshuo.swig。将1(document.getElementsByTagName(&apos;head&apos;)[0] 修改成下面的代码1(document.getElementById(&apos;footer&apos;) 9. 给 Github 添加 README默认情况下，Github中每一个项目，我们希望有一份 README.md 的文件来作为项目的说明，但是我们在项目根目录下的 blog\source 目录下创建一份 README.md 文件，写好说明介绍，部署的时候，这个 README.md 会被 hexo 解析掉，而不会被解析到 Github 中去的。正确的解决方法其实很简单： 把 README.md 文件的后缀名改成 “MDOWN” 然后扔到blog/source文件夹下即可，这样 hexo 不会解析，Github 也会将其作为 MD 文件解析。 10. 给 Blog 添加 LICENSE在 主题配置文件 中的 160 行左右：12345# Creative Commons 4.0 International License.# http://creativecommons.org/# Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zerocreative_commons: by-nc-sa#creative_commons: 将其中第 4 行的注释放开，然后选择你想使用的 LICENSE 即可，可选项参照第 3 行。 最后要说的是： 博客源码 ， 欢迎 star]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
</search>
